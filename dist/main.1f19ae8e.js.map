{"version":3,"sources":["main.js"],"names":["inputId","get","inputQuestion","inputAnswer","buttonRead","buttonCreate","buttonUpdate","buttonDelete","addEventListener","getCards","id","console","clear","fetchCard","postCard","question","value","answer","data","method","patchCard","deleteCard","config","headers","body","JSON","stringify","fetch","then","res","json","result","log","catch","error","renderCards","cards","selector","target","document","querySelector","getAll","querySelectorAll"],"mappings":"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","file":"main.1f19ae8e.js","sourceRoot":"..","sourcesContent":["const inputId = get('#id')\nconst inputQuestion = get('#question')\nconst inputAnswer = get('#answer')\n\nconst buttonRead = get('[data-js=\"read\"]')\nconst buttonCreate = get('[data-js=\"create\"]')\nconst buttonUpdate = get('[data-js=\"update\"]')\nconst buttonDelete = get('[data-js=\"delete\"]')\n\nbuttonRead.addEventListener('click', () => getCards())\nfunction getCards(id = '') {\n  console.clear()\n  fetchCard({ id })\n}\n\nbuttonCreate.addEventListener('click', () => {\n  postCard({ question: inputQuestion.value, answer: inputAnswer.value })\n  inputAnswer.value = ''\n  inputQuestion.value = ''\n})\n\nfunction postCard(data) {\n  fetchCard({ data, method: 'POST' })\n}\n\nbuttonUpdate.addEventListener('click', () =>\n  patchCard(inputId.value, {\n    question: inputQuestion.value,\n    answer: inputAnswer.value,\n  })\n)\n\nfunction patchCard(id, data) {\n  fetchCard({ id, data, method: 'PATCH' })\n}\n\nbuttonDelete.addEventListener('click', () => deleteCard(inputId.value))\n\nfunction deleteCard(id) {\n  fetchCard({ id, method: 'DELETE' })\n}\n\nfunction fetchCard({ id = '', method = 'GET', data }) {\n  const config = {\n    method,\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify(data),\n  }\n  fetch('http://localhost:3334/cards/' + id, config)\n    .then(res => res.json())\n    .then(result => console.log(result))\n    .catch(error => console.log(error))\n}\n\nfunction renderCards(cards) {\n  console.log(cards)\n  // render cards in body\n}\n\nfunction get(selector, target = document) {\n  return target.querySelector(selector)\n}\n\nfunction getAll(selector, target = document) {\n  return target.querySelectorAll(selector)\n}\n"]}